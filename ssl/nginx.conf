# tcp {
#     upstream websockets {
#         server web:3000;
#         check interval=3000 rise=2 fall=5 timeout=1000;
#     }   

#     server {
#         server_name _;
#         listen 7080;

#         ssl on;
#         ssl_certificate      /etc/nginx/ssl/cert.pem;
#         ssl_certificate_key  /etc/nginx/ssl/key.pem;

#         timeout 43200000;
#         websocket_connect_timeout 43200000;
#         proxy_connect_timeout 43200000;

#         so_keepalive on;
#         tcp_nodelay on;

#         websocket_pass websockets;
#         websocket_buffer 1k;
#     }
# }

events {
  	worker_connections  1024;  ## Default: 1024
}
http {
    proxy_cache_path  /var/cache/nginx levels=1:2 keys_zone=one:8m max_size=3000m inactive=600m;
    proxy_temp_path /var/tmp;
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;
    gzip on;
    gzip_comp_level 6;
    gzip_vary on;
    gzip_min_length  1000;
    gzip_proxied any;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;
    gzip_buffers 16 8k;

    ssl_certificate /etc/nginx/ssl/cert.pem;
    ssl_certificate_key /etc/nginx/ssl/key.pem;
#    ssl_protocols        SSLv3 TLSv1;
#    ssl_ciphers HIGH:!aNULL:!MD5;

    upstream node_wallet {
      server web:3000;
      keepalive 64;
    }

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    server {
		listen 443 ssl http2;

		location ~* \.(js|css|png|ttf|wolf2|png|svg)$ {
         	root /public/;
        }

        location / {
          proxy_redirect off;
          proxy_set_header   X-Real-IP            $remote_addr;
          proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
          proxy_set_header   X-Forwarded-Proto $scheme;
          proxy_set_header   Host                   $http_host;
          proxy_set_header   X-NginX-Proxy    true;
          proxy_set_header   Connection "";
          proxy_http_version 1.1;
          proxy_cache one;
          proxy_cache_key sfs$request_uri$scheme;
          proxy_pass         http://node_wallet;
        }

        location /ws {
            proxy_pass http://node_wallet;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
        }
    }
}
